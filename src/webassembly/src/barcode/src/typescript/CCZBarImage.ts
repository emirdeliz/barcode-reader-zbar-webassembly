/**
 * This class represents the image of the barcode for the webassembly.
 */
import { CCZBarBase } from './CCZBarBase';
import { getCCZBarInstance } from './CCZBarWasm';

export class CCZBarImage extends CCZBarBase {
  /**
   * This method creates a memory pointer on webassembly and 
   * a new instance of the class CCZBarImage. 
   * All params of this method  are getting from the canvas generated by pdfjs.
   * @param {number} width - The width of the image.
   * @param {number} height - The height of the image.
   * @param {ArrayBuffer} dataBuf - The image data.
   * @param {number} sequenceNum - The sequence number of the image.
   * @returns
   */
  static async createFromGrayBuffer(
    width: number,
    height: number,
    dataBuf: ArrayBuffer,
    sequenceNum: number = 0
  ) {
    const inst = await getCCZBarInstance();
    const heap = inst.HEAPU8;
    const data = new Uint8Array(dataBuf);
    const len = width * height;
    if (len * 4 !== data.byteLength) {
      throw Error('dataBuf does not match width and height');
    }
    const buf = inst.malloc(len);
    for (let i = 0; i < len; ++i) {
      const r = data[i * 4];
      const g = data[i * 4 + 1];
      const b = data[i * 4 + 2];
      heap[buf + i] = (r * 19595 + g * 38469 + b * 7472) >> 16;
    }
    const ptr = inst.ccZBarImageCreate(
      width,
      height,
      0x30303859 /* Y800 */,
      buf,
      len,
      sequenceNum
    );

    return new this(ptr, inst);
  }
}
